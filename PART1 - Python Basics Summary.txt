=========================================

	AUTOMATE BORING STUFF WITH PYTHON
	
		PART1 - Python Basics
	
=========================================

pythontutor.com
	visualize execution

Expressions = Values and Operators
	Evaluates down to a single value
	
Data Type
	int
	float
	string
	
Variables
	stores a single value
	
Statements
	assign value to variable
	\ -> line continuation
	
Flow Control
	if, elif, else
	while
	for
	break, continue

Built-in
	len()
	range()
	print()
	int()
	str()
	
	
Functions
	sys.exit()
	random.randint(1,10)
	
User-defined Function
	def fun(param):
		code
		return
		
	fun(arg, keyArg = ' ')
	
Exception Handling
	try:
		code
	except NameError
		code
		
Lists
	0 based
	list('Hello')
	list(range(0,100,2))
	del list[1] -> deletes defined item
	'howdy' in ['hello', 'hi', 'howdy']
	'howdy' not in ['hello', 'hi', 'howdy']
	
	
	Methods
		list.index('item')
		list.append('new item')
		list.insert('index', 'new item')
		list.remove('item')  *removes only the first instance
		list.sort() *ASCII order, i.e, Uppercase than Lowecase
		list.sort(key=str.lower)
		
Immutable
	Ints
	Floats
	Strings
	Tuples
	
Mutable - by reference
	* When assigned to variable, gives the reference
	Lists 
	Dictionaries
	Object Attributes
	
		Deepcopy - copy values, not reference
		import copy
		new = copy.deepcopy(old)
		
		see https://www.youtube.com/watch?v=_AEJHKGk9ns
		see 18:00
		
		care must be taken when a list is a default arg of a function
		
Dictionaries
	Are not ordered
	dict = {'key': 'value'}
	
	Methods	
		dict.keys()
		dict.values()
		dict.items()
		dict.get('key','defaultValue')
		dict.setdefault('key','default) -> set default only if key doesn't exis
	
	pretty print the dictionary keys and values
		import pprint
		pprint.pprint(dict)
		
Strings
	backslash - Escape character
	r'' - raw string
	''' Multiline string
	
	Methods
		str.upper()
		str.lower()
		
		str.isupper()
		str.islower()
		str.isalpha()	- letters
		str.isalnum()	- letters + num
		str.isdecimal() - numbers
		str.isspace() 	- spaces
		str.istitle() 	- CamelCase
		
		str.startswith()
		str.endswith()
		
		'sep'.join([list])
		'str'.split('sep')
		
		str.ljust(10,'fillchar')
		str.rjust(10,'fillchar')
		str.center(10,'fillchar')
		
		str.strip('char')	- remove white spaces and 'char'
		str.lstrip()
		str.rstrip()
		
		str.replace('old','new')
		
	String Formating
		'Hello %s' %(var)
		'Hello {}'.format(var)